<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>multi-agent RL on Golden Hat</title><link>https://frankccccc.github.io/blog/categories/multi-agent-rl/</link><description>Recent content in multi-agent RL on Golden Hat</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 26 Feb 2021 01:13:41 +0800</lastBuildDate><atom:link href="https://frankccccc.github.io/blog/categories/multi-agent-rl/index.xml" rel="self" type="application/rss+xml"/><item><title>Simple Guide Of VDN And QMIX</title><link>https://frankccccc.github.io/blog/posts/simple_guide_of_vdn_and_qmix/</link><pubDate>Fri, 26 Feb 2021 01:13:41 +0800</pubDate><guid>https://frankccccc.github.io/blog/posts/simple_guide_of_vdn_and_qmix/</guid><description>Value-Decomposition Network(VDN) QMIX Problem Setup And Assumption Constraint The QMIX imporve the VDN algorithm via give a more general form of the contraint. It defines the contraint like
$$\frac{\partial Q_{tot}}{\partial Q_{a}} \geq 0, \forall a$$
where $Q_{tot}$ is the joint value function and $Q_{a}$ is the value function for each agent.
An intuitive eplaination is that we want the weights of any individual value function $Q_{a}$ are positive. If the weights of individual value function $Q_{a}$ are negative, it will discourage the agent to cooperate, since the higher $Q_{a}$, the lower joint value $Q_{tot}$.</description></item></channel></rss>